package com.ibm.cics.cip.bankliberty.dataInterfaces;
import com.ibm.jzos.fields.*;

// Generated by IBM Record Generator for Java V3.0.0 Build 20170904-1704 on: Fri Oct 06 09:57:53 BST 2017
/**
 * Licensed Materials - Property of IBM
 *
 * (c) Copyright IBM Corp. 2017.
 *
 * US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */

public class NewCustomerNumber {
	static final String COPYRIGHT = "Licensed Materials - Property of IBM (c) Copyright IBM Corp. 2017. All Rights Reserved. US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.";
	protected static CobolDatatypeFactory factory = new CobolDatatypeFactory();
	static { factory.setStringTrimDefault(false); } 

	/** <pre>
	 01 COBOL-LANGUAGE-STRUCTURE. </pre> */
	public static final int COBOL_LANGUAGE_STRUCTURE_len = 13; 

	/** <pre>
	    03 NEWCUSNO-FUNCTION  PIC X. </pre> */
	protected static final StringField NEWCUSNO_FUNCTION = factory.getStringField(1);

	/** <pre>
	    88 NEWCUSNO-FUNCTION-GETNEW VALUE 'G'. </pre> */
	public static final String NEWCUSNO_FUNCTION_GETNEW = "G";

	/** <pre>
	    88 NEWCUSNO-FUNCTION-ROLLBACK VALUE 'R'. </pre> */
	public static final String NEWCUSNO_FUNCTION_ROLLBACK = "R";

	/** <pre>
	    88 NEWCUSNO-FUNCTION-CURRENT VALUE 'C'. </pre> */
	public static final String NEWCUSNO_FUNCTION_CURRENT = "C";

	/** <pre>
	    03 CUSTOMER-NUMBER                  PIC 9(10) DISPLAY. </pre> */
	protected static final ExternalDecimalAsLongField CUSTOMER_NUMBER = factory.getExternalDecimalAsLongField(10, false, false, false, false);

	/** <pre>
	    03 NEWCUSNO-SUCCESS                    PIC X. </pre> */
	protected static final StringField NEWCUSNO_SUCCESS = factory.getStringField(1);

	/** <pre>
	    03 NEWCUSNO-FAIL-CODE                  PIC X. </pre> */
	protected static final StringField NEWCUSNO_FAIL_CODE = factory.getStringField(1);

	protected byte[] _byteBuffer;
	// Instance variables used to cache field values
	protected String newcusnoFunction;
	protected Long customerNumber;
	protected String newcusnoSuccess;
	protected String newcusnoFailCode;


	public NewCustomerNumber (byte[] buffer) {
		this._byteBuffer = buffer;
	}

	public NewCustomerNumber () {
		this._byteBuffer = new byte[COBOL_LANGUAGE_STRUCTURE_len];
	}

	public byte[] getByteBuffer() {
		return _byteBuffer;
	}


	public String getNewcusnoFunction() {
		if (newcusnoFunction == null) {
			newcusnoFunction = NEWCUSNO_FUNCTION.getString(_byteBuffer);
		}
		return newcusnoFunction;
	}

	public void setNewcusnoFunction(String newcusnoFunction) {
		if (NEWCUSNO_FUNCTION.equals(this.newcusnoFunction, newcusnoFunction)) {
			return;
		}
		NEWCUSNO_FUNCTION.putString(newcusnoFunction, _byteBuffer);
		this.newcusnoFunction = newcusnoFunction;
	}

	public boolean isNewcusnoFunctionGetnew() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_GETNEW);
	}

	public boolean isNewcusnoFunctionRollback() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_ROLLBACK);
	}

	public boolean isNewcusnoFunctionCurrent() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_CURRENT);
	}

	public long getCustomerNumber() {
		if (customerNumber == null) {
			customerNumber = new Long(CUSTOMER_NUMBER.getLong(_byteBuffer));
		}
		return customerNumber.longValue();
	}

	public void setCustomerNumber(long customerNumber) {
		if (CUSTOMER_NUMBER.equals(this.customerNumber, customerNumber)) {
			return;
		}
		CUSTOMER_NUMBER.putLong(customerNumber, _byteBuffer);
		this.customerNumber = new Long(customerNumber);
	}

	public String getNewcusnoSuccess() {
		if (newcusnoSuccess == null) {
			newcusnoSuccess = NEWCUSNO_SUCCESS.getString(_byteBuffer);
		}
		return newcusnoSuccess;
	}

	public void setNewcusnoSuccess(String newcusnoSuccess) {
		if (NEWCUSNO_SUCCESS.equals(this.newcusnoSuccess, newcusnoSuccess)) {
			return;
		}
		NEWCUSNO_SUCCESS.putString(newcusnoSuccess, _byteBuffer);
		this.newcusnoSuccess = newcusnoSuccess;
	}

	public String getNewcusnoFailCode() {
		if (newcusnoFailCode == null) {
			newcusnoFailCode = NEWCUSNO_FAIL_CODE.getString(_byteBuffer);
		}
		return newcusnoFailCode;
	}

	public void setNewcusnoFailCode(String newcusnoFailCode) {
		if (NEWCUSNO_FAIL_CODE.equals(this.newcusnoFailCode, newcusnoFailCode)) {
			return;
		}
		NEWCUSNO_FAIL_CODE.putString(newcusnoFailCode, _byteBuffer);
		this.newcusnoFailCode = newcusnoFailCode;
	}

}
